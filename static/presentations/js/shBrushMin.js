(function(){function a(){this.regexList=[{regex:SyntaxHighlighter.regexLib.singleLineCComments,func:function(e){var a=e[0].indexOf("///")==0?"color1":"comments";return[new SyntaxHighlighter.Match(e[0],e.index,a)]}},{regex:SyntaxHighlighter.regexLib.multiLineCComments,css:"comments"},{regex:/@"(?:[^"]|"")*"/g,css:"string"},{regex:SyntaxHighlighter.regexLib.doubleQuotedString,css:"string"},{regex:SyntaxHighlighter.regexLib.singleQuotedString,css:"string"},{regex:/^\s*#.*/gm,css:"preprocessor"},{regex:RegExp(this.getKeywords("async await abstract as base bool break byte case catch char checked class const continue decimal default delegate do double else enum event explicit extern false finally fixed float for foreach get goto if implicit in int interface internal is lock long namespace new null object operator out override params private protected public readonly ref return sbyte sealed set short sizeof stackalloc static string struct switch this throw true try typeof uint ulong unchecked unsafe ushort using virtual void while"),
"gm"),css:"keyword"},{regex:/\bpartial(?=\s+(?:class|interface|struct)\b)/g,css:"keyword"},{regex:/\byield(?=\s+(?:return|break)\b)/g,css:"keyword"}];this.forHtmlScript(SyntaxHighlighter.regexLib.aspScriptTags)}typeof require!="undefined"&&(SyntaxHighlighter=require("shCore").SyntaxHighlighter);a.prototype=new SyntaxHighlighter.Highlighter;a.aliases=["c#","c-sharp","csharp"];SyntaxHighlighter.brushes.CSharp=a;typeof exports!="undefined"&&(exports.Brush=a)})();
(function(){SyntaxHighlighter.brushes.FSharp=function(){this.regexList=[{regex:SyntaxHighlighter.regexLib.singleLineCComments,css:"comments"},{regex:RegExp("\\(\\*[\\s\\S]*?\\*\\)","gm"),css:"comments"},{regex:SyntaxHighlighter.regexLib.doubleQuotedString,css:"string"},{regex:RegExp("^\\s*#.*","gm"),css:"preprocessor"},{regex:RegExp(this.getKeywords("abstract and as assert base begin class default delegate do done downcast downto elif else end exception extern false finally for fun function if in inherit inline interface internal lazy let match member module mutable namespace new null of open or override private public rec return static struct then to true try type upcast use val void when while with yield"),
"gm"),css:"keyword"}]};SyntaxHighlighter.brushes.FSharp.prototype=new SyntaxHighlighter.Highlighter;SyntaxHighlighter.brushes.FSharp.aliases=["f#","f-sharp","fsharp"]})();
(function(){function a(){var a=SyntaxHighlighter.regexLib;this.regexList=[{regex:a.multiLineDoubleQuotedString,css:"string"},{regex:a.multiLineSingleQuotedString,css:"string"},{regex:a.singleLineCComments,css:"comments"},{regex:a.multiLineCComments,css:"comments"},{regex:/\s*#.*/gm,css:"preprocessor"},{regex:RegExp(this.getKeywords("break case catch continue default delete do else false  for function if in instanceof new null return super switch this throw true try typeof var while with"),"gm"),css:"keyword"}];
this.forHtmlScript(a.scriptScriptTags)}typeof require!="undefined"&&(SyntaxHighlighter=require("shCore").SyntaxHighlighter);a.prototype=new SyntaxHighlighter.Highlighter;a.aliases=["js","jscript","javascript"];SyntaxHighlighter.brushes.JScript=a;typeof exports!="undefined"&&(exports.Brush=a)})();
(function(){function a(){this.regexList=[{regex:new XRegExp("(\\&lt;|<)\\!\\[[\\w\\s]*?\\[(.|\\s)*?\\]\\](\\&gt;|>)","gm"),css:"color2"},{regex:SyntaxHighlighter.regexLib.xmlComments,css:"comments"},{regex:new XRegExp("(&lt;|<)[\\s\\/\\?]*(\\w+)(?<attributes>.*?)[\\s\\/\\?]*(&gt;|>)","sg"),func:function(a){var f=SyntaxHighlighter.Match,g=a[0],c=(new XRegExp("(&lt;|<)[\\s\\/\\?]*(?<name>[:\\w-\\.]+)","xg")).exec(g),d=[];if(a.attributes!=null)for(var b,h=new XRegExp("(?<name> [\\w:\\-\\.]+)\\s*=\\s*(?<value> \".*?\"|'.*?'|\\w+)",
"xg");(b=h.exec(g))!=null;)d.push(new f(b.name,a.index+b.index,"color1")),d.push(new f(b.value,a.index+b.index+b[0].indexOf(b.value),"string"));c!=null&&d.push(new f(c.name,a.index+c[0].indexOf(c.name),"keyword"));return d}}]}typeof require!="undefined"&&(SyntaxHighlighter=require("shCore").SyntaxHighlighter);a.prototype=new SyntaxHighlighter.Highlighter;a.aliases=["xml","xhtml","xslt","html"];SyntaxHighlighter.brushes.Xml=a;typeof exports!="undefined"&&(exports.Brush=a)})();
SyntaxHighlighter.brushes.Haskell=function(){this.regexList=[{regex:/--(.*)$/gm,css:"comments"},{regex:SyntaxHighlighter.regexLib.singleQuotedString,css:"string"},{regex:RegExp(this.getKeywords("as case class of data default deriving do forall foreign hiding if then else import infix infixl infixr instance let in mdo module newtype qualified type where "),"gm"),css:"keyword"},{regex:RegExp(this.getKeywords("Char String Bool Num Int Integer Float Eq Ord Read Integral Fractional"),"gm"),css:"color1"},
{regex:RegExp(this.getKeywords("True False otherwise not"),"gm"),css:"color2"}]};SyntaxHighlighter.brushes.Haskell.prototype=new SyntaxHighlighter.Highlighter;SyntaxHighlighter.brushes.Haskell.aliases=["haskell","hs"];